//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiRest.SRNotificacion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRNotificacion.INotificacionService")]
    public interface INotificacionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificacionService/EnviarEmail", ReplyAction="http://tempuri.org/INotificacionService/EnviarEmailResponse")]
        void EnviarEmail(string email, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificacionService/EnviarEmail", ReplyAction="http://tempuri.org/INotificacionService/EnviarEmailResponse")]
        System.Threading.Tasks.Task EnviarEmailAsync(string email, string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificacionServiceChannel : ApiRest.SRNotificacion.INotificacionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificacionServiceClient : System.ServiceModel.ClientBase<ApiRest.SRNotificacion.INotificacionService>, ApiRest.SRNotificacion.INotificacionService {
        
        public NotificacionServiceClient() {
        }
        
        public NotificacionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificacionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificacionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificacionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void EnviarEmail(string email, string mensaje) {
            base.Channel.EnviarEmail(email, mensaje);
        }
        
        public System.Threading.Tasks.Task EnviarEmailAsync(string email, string mensaje) {
            return base.Channel.EnviarEmailAsync(email, mensaje);
        }
    }
}
